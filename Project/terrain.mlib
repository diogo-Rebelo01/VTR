<?xml version="1.0"?>
<materialLib name="Terrain">

        <textures>
		<texture name="texDIRT"  filename="textures/dirt.png"  mipmap="true" />
                <texture name="texGRASS" filename="textures/grass.png" mipmap="true" />
                <texture name="texSNOW"  filename="textures/snow.jpg"  mipmap="true" />
                <texture name="texSAND"  filename="textures/sand.jpg"  mipmap="true" />
                <texture name="texROCK"  filename="textures/rock.png"  mipmap="true" />
                <cubeMap name="CM"
                        filePosX="textures/posx.bmp"
			fileNegX="textures/negx.bmp"
			filePosY="textures/posy.bmp"
			fileNegY="textures/negy.bmp"
			filePosZ="textures/posz.bmp"
			fileNegZ="textures/negz.bmp"	
                />
        </textures>

        <shaders>
                <shader name="skyBox"  vs = "shaders/skybox.vert" 
                                       ps = "shaders/skybox.frag" />
                <shader name="terrain" ps="shaders/terrain.frag"
                                       tc="shaders/terrain.tesc"
                                       te="shaders/terrain.tese"
                                       vs="shaders/terrain.vert" />
                <shader name="water"   ps="shaders/water.frag" 
				       vs="shaders/water.vert" />
        </shaders>

        <states>
                <state name="skybox" >
                        <CULL_TYPE value="FRONT" />
                        <DEPTH_MASK value="false" />
                </state>
		<state name="transparent">
			<ORDER     value="2" />
			<BLEND     value="true" />
			<BLEND_SRC value="SRC_ALPHA" />
			<BLEND_DST value="ONE_MINUS_SRC_ALPHA" />		
		</state>
	</states>

        <materials>
                <material name="skybox" >
                        <shader name="skyBox" >
                                <values>
                                <valueof uniform="m_pvm" 
                                        type="RENDERER" 
                                        component="PROJECTION_VIEW_MODEL" />
                                <valueof uniform="cam_pos" 
                                        type="CAMERA"
                                        component="POSITION" />

                                <valueof uniform="tex_cm" 
                                        type="TEXTURE_BINDING" 
                                        component="UNIT" id ="0" />

                                </values>
                        </shader>
                        <textures>
                                <texture name="CM" UNIT="0" >
                                        <WRAP_S value="CLAMP_TO_EDGE" />
                                        <WRAP_T value="CLAMP_TO_EDGE" />
                                </texture>
                        </textures>
                        <state name = "skybox" />
                </material>

                <material name="terrain">
                        <shader name="terrain">
                                <values>
                                        <valueof uniform="m_pvm"    type="RENDERER" context="CURRENT" component="PROJECTION_VIEW_MODEL" />
                                        <valueof uniform="m_normal" type="RENDERER" context="CURRENT" component="NORMAL"                />
                                        <valueof uniform="m_view"   type="RENDERER" context="CURRENT" component="VIEW"                  />
                                        <valueof uniform="l_dir"    type="LIGHT"    context="Sun"     component="DIRECTION"             />
                                        <valueof uniform="ilevel"   type="RENDERER" context="CURRENT" component="level"                 />
                                        <valueof uniform="olevel"   type="RENDERER" context="CURRENT" component="level"                 />
                                        <!-- SETTINGS -->
                                        <valueof uniform="num_octaves"    type="RENDERER" component="num_octaves"    />
                                        <valueof uniform="seed"           type="RENDERER" component="seed"           />
                                        <valueof uniform="seedMoisure"    type="RENDERER" component="seedMoisure"    />
                                        <valueof uniform="amplitude"      type="RENDERER" component="amplitude"      />
                                        <valueof uniform="frequencia"     type="RENDERER" component="frequencia"     />
                                        <valueof uniform="redistribuicao" type="RENDERER" component="redistribuicao" />
                                        <valueof uniform="scale"          type="RENDERER" component="scale"          />
                                        <valueof uniform="scaleMoisture"  type="RENDERER" component="scaleMoisture"  />
                                        <valueof uniform="scaleTex"       type="RENDERER" component="scaleTex"       />
                                        <valueof uniform="offset"         type="RENDERER" component="offset"          />
                                        <valueof uniform="use_moisture"   type="RENDERER" component="use_moisture"   />
                                        <valueof uniform="use_textures"   type="RENDERER" component="use_textures"   />
                                        <!-- LAYERS LEVELS -->
                                        <valueof uniform="first_level"  type="RENDERER"  component="first_level"   />
                                        <valueof uniform="second_level" type="RENDERER"  component="second_level"  />
                                        <valueof uniform="third_level"  type="RENDERER"  component="third_level"   />
                                        <valueof uniform="fourth_level" type="RENDERER"  component="fourth_level"  />
                                        <!-- COLORS BIOMES (SNOW, MOUNTAIN, TUNDRA, BADLANDS, MUD, DIRT, GRAVEL, BEACH, DESERT, GRASSLAND, FOREST)-->
                                        <valueof uniform="SNOW"                       type="RENDERER" context="CURRENT" component="SNOW"                       />
                                        <valueof uniform="MOUNTAIN"                   type="RENDERER" context="CURRENT" component="MOUNTAIN"                   />
                                        <valueof uniform="TUNDRA"                     type="RENDERER" context="CURRENT" component="TUNDRA"                     />
                                        <valueof uniform="BADLANDS"                   type="RENDERER" context="CURRENT" component="BADLANDS"                   />
                                        <valueof uniform="BEACH"                      type="RENDERER" context="CURRENT" component="BEACH"                      />
                                        <valueof uniform="DIRT"                       type="RENDERER" context="CURRENT" component="DIRT"                       />
                                        <valueof uniform="MUD"                        type="RENDERER" context="CURRENT" component="MUD"                        />
                                        <valueof uniform="GRAVEL"                     type="RENDERER" context="CURRENT" component="GRAVEL"                     />
                                        <valueof uniform="DESERT"                     type="RENDERER" context="CURRENT" component="DESERT"                     />
                                        <valueof uniform="GRASSLAND"                  type="RENDERER" context="CURRENT" component="GRASSLAND"                  />
                                        <valueof uniform="FOREST"                     type="RENDERER" context="CURRENT" component="FOREST"                     />
                                        <!-- TEXTURES -->
                                        <valueof uniform="texDIRT"  type="TEXTURE_BINDING" context="CURRENT" component="UNIT" id="0" />
                                        <valueof uniform="texGRASS" type="TEXTURE_BINDING" context="CURRENT" component="UNIT" id="1" />
                                        <valueof uniform="texSNOW"  type="TEXTURE_BINDING" context="CURRENT" component="UNIT" id="2" />
                                        <valueof uniform="texSAND"  type="TEXTURE_BINDING" context="CURRENT" component="UNIT" id="3" />
                                        <valueof uniform="texROCK"  type="TEXTURE_BINDING" context="CURRENT" component="UNIT" id="4" />
                                </values>
                        </shader>
                        <textures>
				<texture name="texDIRT"  UNIT = "0" />
                                <texture name="texGRASS" UNIT = "1" />
                                <texture name="texSNOW"  UNIT = "2" />
                                <texture name="texSAND"  UNIT = "3" />
                                <texture name="texROCK"  UNIT = "4" />
			</textures>
                </material>
                <material name="water">
                        <shader name="water">
                                <values>
                                        <!-- AUXILIARS -->
					<valueof uniform="m_pvm"    type="RENDERER" context="CURRENT" component="PROJECTION_VIEW_MODEL" />								
					<valueof uniform="m_normal" type="RENDERER" context="CURRENT" component="NORMAL"                />							
					<valueof uniform="m_view"   type="RENDERER" context="CURRENT" component="VIEW"                  />
                                        <valueof uniform="l_dir"    type="LIGHT"    context="Sun"     component="DIRECTION"             />
                                        <!-- WATER SETTINS -->
					<valueof uniform="water_level" type="RENDERER" context="CURRENT" component="water_level" />
                                        <valueof uniform="opacity"     type="RENDERER" context="CURRENT" component="opacity"     />				
                                        <valueof uniform="scale"       type="RENDERER" context="CURRENT" component="scale"       />
                                        <valueof uniform="WATER"       type="RENDERER" context="CURRENT" component="WATER"       />
					
                                </values>
                        </shader>
                        <state name="transparent"/>
                </material>
        </materials>

</materialLib>